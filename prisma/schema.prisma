generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food_category {
  id          BigInt        @id @default(autoincrement())
  name        String?       @db.VarChar(15)
  created_at  DateTime?     @db.DateTime(6)
  updated_at  DateTime?     @db.DateTime(6)
  user_prefer user_prefer[]
}

model mission {
  id           BigInt         @id @default(autoincrement())
  store_id     BigInt?
  reward       Int?
  deadline     DateTime?      @db.DateTime(0)
  mission_spec String?        @db.Text
  created_at   DateTime?      @db.DateTime(6)
  updated_at   DateTime?      @db.DateTime(6)
  store        store?         @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mission_ibfk_1")
  user_mission user_mission[]

  @@index([store_id], map: "store_id")
}

model region {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar(20)
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  store      store[]
}

model review {
  id           BigInt         @id @default(autoincrement())
  user_id      BigInt?
  store_id     BigInt?
  body         String?        @db.Text
  score        Float?         @db.Float
  created_at   DateTime?      @db.DateTime(6)
  updated_at   DateTime?      @db.DateTime(6)
  user         user?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_ibfk_1")
  store        store?         @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_ibfk_2")
  review_image review_image[]

  @@index([store_id], map: "store_id")
  @@index([user_id], map: "user_id")
}

model review_image {
  id         BigInt    @id @default(autoincrement())
  review_id  BigInt?
  image_url  String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  review     review?   @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_image_ibfk_1")

  @@index([review_id], map: "review_id")
}

model store {
  id         BigInt    @id @default(autoincrement())
  region_id  BigInt?
  name       String?   @db.VarChar(50)
  address    String?   @db.VarChar(50)
  score      Float?    @db.Float
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  mission    mission[]
  review     review[]
  region     region?   @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_ibfk_1")

  @@index([region_id], map: "region_id")
}

model user {
  id            BigInt         @id @default(autoincrement())
  name          String?        @db.VarChar(20)
  gender        String?        @db.VarChar(10)
  age           Int?
  address       String?        @db.VarChar(40)
  spec_address  String?        @db.VarChar(40)
  status        String?        @db.VarChar(15)
  inactive_date DateTime?      @db.DateTime(6)
  social_type   String?        @db.VarChar(10)
  created_at    DateTime?      @db.DateTime(6)
  updated_at    DateTime?      @db.DateTime(6)
  email         String?        @db.VarChar(50)
  point         Int?
  review        review[]
  user_mission  user_mission[]
  user_prefer   user_prefer[]
}

model user_mission {
  id         BigInt    @id @default(autoincrement())
  user_id    BigInt?
  mission_id BigInt?
  status     String?   @db.VarChar(15)
  created_at DateTime? @db.DateTime(6)
  updated_at DateTime? @db.DateTime(6)
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_mission_ibfk_1")
  mission    mission?  @relation(fields: [mission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_mission_ibfk_2")

  @@index([mission_id], map: "mission_id")
  @@index([user_id], map: "user_id")
}

model user_prefer {
  id            BigInt         @id @default(autoincrement())
  user_id       BigInt?
  category_id   BigInt?
  created_at    DateTime?      @db.DateTime(6)
  updated_at    DateTime?      @db.DateTime(6)
  user          user?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_prefer_ibfk_1")
  food_category food_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_prefer_ibfk_2")

  @@index([category_id], map: "category_id")
  @@index([user_id], map: "user_id")
}
